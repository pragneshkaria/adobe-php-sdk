Mike's "MySQL.php":

getDatabases() call returns Array
(
    [0] => stdClass Object
        (
            [Database] => addr
        )

    [1] => stdClass Object
        (
            [Database] => auth
        )

    [2] => stdClass Object
        (
            [Database] => book_sc
        )

    [3] => stdClass Object
        (
            [Database] => businesses
        )
}

o PHP Code (returns object)

	function getDatabases(){
		
		$db_list = mysql_list_dbs($this->connection);

		if( !$db_list ) {
			$msg=$this->err_prefix."could not get databases: ".mysql_error();
   			throw new Exception($msg);
		} else {
			while ($row = mysql_fetch_object($db_list)) {
    			$Return[] = $row;
			}
			return $Return;
		}
	}

o 'mxml' Code

		private function onResultGetDatabases(event:ResultEvent):void {
			currentState = 'browse';
			listOfDatabases.dataProvider = ArrayUtil.toArray( event.result );
		}

______________________________________________________________________________

Pete's "MySQL.php":


getUsers() call returns Array
(
    [0] => Array
        (
            [userid] => 1
            [username] => Pete Mackie
            [emailaddress] => pete@seaquest.com
        )

    [1] => Array
        (
            [userid] => 75
            [username] => Joe Foo
            [emailaddress] => joe@foo.edu
        )

    [2] => Array
        (
            [userid] => 77
            [username] => Mike Smith
            [emailaddress] => smittty@irornworks.com
        )
)

o PHP Code  (returns array)

	public function getUsers() {
		# Return a list of all the 'flextest' users
		if (!$result=$this->mysqli->query("SELECT * from users")) {
			$msg=$this->err_prefix."SELECT query error: ".$this->mysqli->error;
			$this->mysqli->close();
   		throw new Exception($msg);
		}
		while ($row = $result->fetch_assoc()) {
			$user_array[] = $row;
		}
		return($user_array);
	}

o 'mxml' Code

		private function getUsersResult(event:ResultEvent):void {
			// var getUsersArray:Array = event.result as Array;
			// dataProvider = getUsersArray;
			// Above changed to:
			dataProvider = ArrayUtil.toArray(event.result);   // requires: import mx.utils.ArrayUtil;
		}
